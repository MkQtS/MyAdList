name: Generate my adlists

on:
  schedule:
    - cron: 0 10,22 * * *
  workflow_dispatch:

jobs:
  generate:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init environment
        run: |
          mkdir down dns ubo fop nofop title checksum
          echo "MAIN_PATH=$(pwd)" >> $GITHUB_ENV
          echo "VERSION_CODE=$(date -d "8 hour" -u +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "MODIFY_TIME=$(date -d "8 hour" -u "+%Y/%m/%d %H:%M UTC+8")" >> $GITHUB_ENV

      - name: Prepare source files
        env:
          EASY_FOP_SCRIPT: https://raw.githubusercontent.com/easylist/easylist/master/FOP.py
          MOD_FOP_SCRIPT: https://raw.githubusercontent.com/FiltersHeroes/ScriptsPlayground/master/scripts/FOP_FH.py
          EASYLIST: https://easylist-downloads.adblockplus.org/easylist.txt
          EASYPRIVACY: https://easylist-downloads.adblockplus.org/easyprivacy.txt
          EASYLISTCHINA: https://raw.githubusercontent.com/easylist/easylistchina/master/easylistchina.txt
          CJX_ANNOYANCE: https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt
          OPTIMIZED_EASYLIST: https://filters.adtidy.org/windows/filters/101_optimized.txt
          OPTIMIZED_EASYPRIVACY: https://filters.adtidy.org/windows/filters/118_optimized.txt
          OPTIMIZED_EASYLISTCHINA: https://filters.adtidy.org/windows/filters/104_optimized.txt
          OPTIMIZED_CJX_ANNOYANCE: https://filters.adtidy.org/windows/filters/220_optimized.txt
          MINI_EASYLIST: https://easylist-downloads.adblockplus.org/easylist-minified.txt
          MINI_EASYPRIVACY: https://easylist-downloads.adblockplus.org/easyprivacy-minified.txt
          MINI_EASYLISTCHINA: https://easylist-downloads.adblockplus.org/easylistchina-minified.txt
          ADGUARD_DNS: https://filters.adtidy.org/windows/filters/15_optimized.txt
          ANTI_AD_ADGUARD: https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-adguard.txt
          PETER_LOWE: https://pgl.yoyo.org/adservers/serverlist.php?hostformat=adblockplus&mimetype=plaintext
          UBLOCK_FILTERS: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/filters.txt
          UBLOCK_2020: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/filters-2020.txt
          UBLOCK_2021: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/filters-2021.txt
          UBLOCK_2022: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/filters-2022.txt
          UBLOCK_2023: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/filters-2023.txt
          UBLOCK_BADWARE: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/badware.txt
          UBLOCK_PRIVACY: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/privacy.txt
          UBLOCK_QUICK: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/quick-fixes.txt
          UBLOCK_ABUSE: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/resource-abuse.txt
          UBLOCK_UNBREAK: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/unbreak.txt
        run: |
          cp ${{ env.MAIN_PATH }}/material/Titles.txt ${{ env.MAIN_PATH }}/title/title.txt
          wget -qO ${{ env.MAIN_PATH }}/fop/FOP.py ${MOD_FOP_SCRIPT}
          cd ${{ env.MAIN_PATH }}/down
          wget -qO- ${{ env.EASYLIST }} | sed '$G' > ./easylist.txt
          wget -qO- ${{ env.EASYPRIVACY }} | sed '$G' > ./easyprivacy.txt
          wget -qO- ${{ env.EASYLISTCHINA }} | sed '$G' > ./easylistchina.txt
          wget -qO- ${{ env.CJX_ANNOYANCE }} | sed '$G' > ./cjx-annoyance.txt
          wget -qO- ${{ env.OPTIMIZED_EASYLIST }} | sed '$G' > ./opt-easylist.txt
          wget -qO- ${{ env.OPTIMIZED_EASYPRIVACY }} | sed '$G' > ./opt-easyprivacy.txt
          wget -qO- ${{ env.OPTIMIZED_EASYLISTCHINA }} | sed '$G' > ./opt-easylistchina.txt
          wget -qO- ${{ env.OPTIMIZED_CJX_ANNOYANCE }} | sed '$G' > ./opt-cjx-annoyance.txt
          wget -qO- ${{ env.MINI_EASYLIST }} | sed '$G' > ./mini-easylist.txt
          wget -qO- ${{ env.MINI_EASYPRIVACY }} | sed '$G' > ./mini-easyprivacy.txt
          wget -qO- ${{ env.MINI_EASYLISTCHINA }} | sed '$G' > ./mini-easylistchina.txt
          wget -qO- ${{ env.ADGUARD_DNS }} | sed '$G' > ./rawdns.txt
          wget -qO- ${{ env.ANTI_AD_ADGUARD }} | sed '$G' >> ./rawdns.txt
          wget -qO- "${{ env.PETER_LOWE }}" | sed '$G' >> ./rawdns.txt
          wget -qO- ${{ env.UBLOCK_FILTERS }} | sed '$G' > ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_2020 }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_2021 }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_2022 }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_2023 }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_BADWARE }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_PRIVACY }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_QUICK }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_ABUSE }} | sed '$G' >> ./rawubo.txt
          wget -qO- ${{ env.UBLOCK_UNBREAK }} | sed '$G' >> ./rawubo.txt

      - name: Preprocess
        run: |
          cd ${{ env.MAIN_PATH }}/down
          sed -e 's/\^|/\^/g' -e 's/\$important//g' -e '/^[^|@]/d' -e 's/\r//g' ./rawdns.txt | sort -u > ../dns/dnscombined.txt
          sed -e '/^![^#]/d' -e '/^!$/d' -e '/^!#include/d' -e 's/\r//g' ./rawubo.txt > ../ubo/ubocombined.txt
          cat ./easylist.txt ./easyprivacy.txt ./easylistchina.txt ./cjx-annoyance.txt | sed -e '/^\[Adblock/d' -e '/^!/d' -e 's/\r//g' \
          | sed -E -e 's/#\?#(.*):-abp-has(.+):-abp-contains/##\1:has\2:contains/g' -e 's/#\?#(.*):-abp-has/##\1:has/g' -e 's/#\?#(.*):-abp-contains/##\1:contains/g' | sort -u > ../fop/easycombined.txt
          cat ./opt-easylist.txt ./opt-easyprivacy.txt ./easylistchina.txt ./cjx-annoyance.txt | sed -e '/^\[Adblock/d' -e '/^!/d' -e 's/\r//g' \
          | sed -E -e 's/#\?#(.*):-abp-has(.+):-abp-contains/##\1:has\2:contains/g' -e 's/#\?#(.*):-abp-has/##\1:has/g' -e 's/#\?#(.*):-abp-contains/##\1:contains/g' | sort -u > ../fop/optcombined.txt
          cat ./mini-easylist.txt ./mini-easyprivacy.txt ./mini-easylistchina.txt ./opt-cjx-annoyance.txt | sed -e '/^\[Adblock/d' -e '/^!/d' -e 's/\r//g' \
          | sed -E -e 's/#\?#(.*):-abp-has(.+):-abp-contains/##\1:has\2:contains/g' -e 's/#\?#(.*):-abp-has/##\1:has/g' -e 's/#\?#(.*):-abp-contains/##\1:contains/g' | sort -u > ../fop/minicombined.txt

      - name: Combine DNS list
        run: |
          cd ${{ env.MAIN_PATH }}/dns
          sed -i -e '/^||cis\.sohu\.com\^/d' -e '/^||t\.co\^/d' dnscombined.txt
          sed -n '/^@@/p' dnscombined.txt | sed 's/@@|/@@||/g' | sed 's/@@|||/@@||/g' | sort -u > except.txt
          sed -e '/^@@/d' -e '/[^^]$/d' -e '/\*\^/d' dnscombined.txt > common_check.txt
          grep -E '^\|\|[^.]+\.[^.]+\^$' common_check.txt | sed -E 's#^\|\|([^^]+)\^$#\1#' > level2.txt
          grep -E '^\|\|[^.]+\.[^.]+\.[^.]+\^$' common_check.txt | sed -E 's#^\|\|([^^]+)\^$#\1#' > level3.txt
          grep -E '^\|\|[^.]+\.[^.]+\.[^.]+\.[^.]+\^$' common_check.txt | sed -E 's#^\|\|([^^]+)\^$#\1#' > level4.txt
          grep -E '^\|\|[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\^$' common_check.txt | sed -E 's#^\|\|([^^]+)\^$#\1#' > level5.txt
          grep -E '^\|\|[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\^$' common_check.txt | sed -E 's#^\|\|([^^]+)\^$#\1#' > level6.txt
          grep -E '^\|\|[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\^$' common_check.txt | sed -E 's#^\|\|([^^]+)\^$#\1#' > level7.txt
          grep -E '^\|\|[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\.[^.]+\^$' common_check.txt | sed -E 's#^\|\|([^^]+)\^$#\1#' > level8.txt
          for ((i=2; i<=7; i++)); do
            echo -n '\S+\.(' > replace_text.txt
            for ((t=1; t<=$i-1; t++)); do
              echo -n '[^.]+\.' >> replace_text.txt
            done
            echo -n '[^.]+)' >> replace_text.txt
            replace_re=$(cat replace_text.txt)
            for ((j=$i+1; j<=8; j++)); do
              sed -E 's#^'"$replace_re"'$#\1#' level"$j".txt | sort -u > check"$i"_"$j".txt
              comm -12 level"$i".txt check"$i"_"$j".txt | sed -e 's/\./\\\./g' -e 's/\*/\\\*/g' > redun"$j"_"$i".txt
              while read redun_rule; do
                sed -i '/\.'"$redun_rule"'$/d' level"$j".txt
              done < redun"$j"_"$i".txt
            done
          done
          cat level2.txt level3.txt level4.txt level5.txt level6.txt level7.txt level8.txt | sed -n '/\*/p' > common_wildcards.txt
          cat level2.txt level3.txt level4.txt level5.txt level6.txt level7.txt level8.txt | sed '/\*/d' > common_plain.txt
          sed -e 's/\./\\\./g' -e 's/\*/\.\*/g' common_wildcards.txt > wild_check.txt
          while read wild_rule; do
            sed -Ei '/(^|\.)'"$wild_rule"'$/d' common_plain.txt
          done < wild_check.txt
          cat common_wildcards.txt common_plain.txt | sed -E 's#^(\S+)$#\|\|\1\^#' | sort > common_checked.txt
          sed 's/@@//g' except.txt > except_check.txt
          comm -13 except_check.txt common_checked.txt > common.txt
          cat except.txt common.txt | sed '/^$/d' > ${{ env.MAIN_PATH }}/title/dnsrules.txt

      - name: Separate uBlock if rules
        run: |
          cd ${{ env.MAIN_PATH }}/ubo
          sed -n '/^!#if/,/^!#endif/p' ubocombined.txt > ./rawuboif.txt
          sed '/^!#if/,/^!#endif/d' ubocombined.txt > ../fop/ubo_fop.txt
          for ii in 'cap_html_filtering' 'env_chromium' 'env_edge' 'env_safari' 'env_firefox' 'env_mobile' 'ext_devbuild'
          do
            sed -n "/^!#if ${ii}/,/^!#endif/p" ./rawuboif.txt | sed "/^!#else/,/^!#endif/d" | sed '/^!/d' | sort -u > ./if${ii}_main.txt
            sed -n "/^!#if ${ii}/,/^!#endif/p" ./rawuboif.txt | sed "/^!#else/,/^!#endif/p" | sed '/^!/d' | sort -u > ./if${ii}_else.txt
            sed -n "/^!#if !${ii}/,/^!#endif/p" ./rawuboif.txt | sed "/^!#else/,/^!#endif/d" | sed '/^!/d' | sort -u >> ./if${ii}_else.txt
            sed -n "/^!#if !${ii}/,/^!#endif/p" ./rawuboif.txt | sed "/^!#else/,/^!#endif/p" | sed '/^!/d' | sort -u >> ./if${ii}_main.txt
            echo "!#if ${ii}" >> ./uboifmg.txt
            cat "./if${ii}_main.txt" >> ./uboifmg.txt
            if [ "$(du -b "./if${ii}_else.txt" | cut -f 1)" -gt 2 ]; then
              echo '!#else' >> ./uboifmg.txt
              cat "./if${ii}_else.txt" >> ./uboifmg.txt
            fi
            echo '!#endif' >> ./uboifmg.txt
            rm -f "./if${ii}_main.txt" "./if${ii}_else.txt"
          done
          sed -e '/^!#if cap_html_filtering/,/^!#endif/d' -e '/^!#if env_chromium/,/^!#endif/d' -e '/^!#if env_edge/,/^!#endif/d' -e '/^!#if env_safari/,/^!#endif/d' \
          -e '/^!#if env_firefox/,/^!#endif/d' -e '/^!#if env_mobile/,/^!#endif/d' -e '/^!#if ext_devbuild/,/^!#endif/d' \
          -e '/^!#if !cap_html_filtering/,/^!#endif/d' -e '/^!#if !env_chromium/,/^!#endif/d' -e '/^!#if !env_edge/,/^!#endif/d' -e '/^!#if !env_safari/,/^!#endif/d' \
          -e '/^!#if !env_firefox/,/^!#endif/d' -e '/^!#if !env_mobile/,/^!#endif/d' -e '/^!#if !ext_devbuild/,/^!#endif/d' rawuboif.txt > ./uboifleft.txt
          cat ./uboifmg.txt ./uboifleft.txt | sed '/^$/d' > ../nofop/uboif.txt

      - name: FOP rules
        run: |
          cd ${{ env.MAIN_PATH }}/fop
          sed -En '/^#@?#/p' easycombined.txt | sort -u > ../nofop/easy_ghide.txt
          sed -En '/^#@?#/p' optcombined.txt | sort -u > ../nofop/opt_ghide.txt
          sed -En '/^#@?#/p' minicombined.txt | sort -u > ../nofop/mini_ghide.txt
          sed -En '/^#@?#/p' ubo_fop.txt | sort -u > ../nofop/ubo_ghide.txt
          sed -Ei '/^#@?#/d' easycombined.txt
          sed -Ei '/^#@?#/d' optcombined.txt
          sed -Ei '/^#@?#/d' minicombined.txt
          sed -Ei '/^#@?#/d' ubo_fop.txt
          for list in ./*.txt; do
            python ${{ env.MAIN_PATH }}/material/MDR.py ./${list}
          done
          python ./FOP.py
          cat ../nofop/easy_ghide.txt ./easycombined.txt | sed '/^$/d' > ../title/easy_done.txt
          cat ../nofop/opt_ghide.txt ./optcombined.txt | sed '/^$/d' > ../title/opt_done.txt
          cat ../nofop/mini_ghide.txt ./minicombined.txt | sed '/^$/d' > ../title/mini_done.txt
          cat ../nofop/ubo_ghide.txt ./ubo_fop.txt ../nofop/uboif.txt | sed '/^$/d' > ../title/ubo_done.txt

      - name: Create final lists
        run: |
          cd ${{ env.MAIN_PATH }}/title
          sed -i -e "s/BLANKVER/${{ env.VERSION_CODE }}/" -e "s#BLANKTIME#${{ env.MODIFY_TIME }}#" ./title.txt
          sed -n '/^! Title: Easy/,/^# Easy/p' title.txt | sed -e "s/NUMCOUNT/$(sed -n '$=' easy_done.txt)/" -e '/^#/d' > ./easytitle.txt
          sed -n '/^! Title: Optimized/,/^# Optimized/p' title.txt | sed -e "s/NUMCOUNT/$(sed -n '$=' opt_done.txt)/" -e '/^#/d' > ./opttitle.txt
          sed -n '/^! Title: Mini/,/^# Mini/p' title.txt | sed -e "s/NUMCOUNT/$(sed -n '$=' mini_done.txt)/" -e '/^#/d' > ./minititle.txt
          sed -n '/^! Title: DNS/,/^# DNS/p' title.txt | sed -e "s/NUMCOUNT/$(sed -n '$=' dnsrules.txt)/" -e '/^#/d' > ./dnstitle.txt
          sed -n '/^! Title: uBlock/,/^# uBlock/p' title.txt | sed -e "s/NUMCOUNT/$(sed -n '$=' ubo_done.txt)/" -e '/^#/d' > ./ubotitle.txt
          cat easytitle.txt easy_done.txt > ${{ env.MAIN_PATH }}/checksum/easyrules.txt
          cat opttitle.txt opt_done.txt > ${{ env.MAIN_PATH }}/checksum/optlist.txt
          cat minititle.txt mini_done.txt > ${{ env.MAIN_PATH }}/checksum/minilist.txt
          cat dnstitle.txt dnsrules.txt > ${{ env.MAIN_PATH }}/checksum/dnsblock.txt
          cat ubotitle.txt ubo_done.txt > ${{ env.MAIN_PATH }}/checksum/uborules.txt
          cd ${{ env.MAIN_PATH }}
          for list in ./checksum/*.txt; do
            perl ./material/addChecksum.pl ${list}
            mv -f ${list} ./
          done

      - name: Update
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add easyrules.txt optlist.txt minilist.txt dnsblock.txt uborules.txt
          git commit -m "Updated on ${{ env.MODIFY_TIME }}"
          git push origin main
          [ $(date -u +%H) -gt 12 ] || curl -s https://purge.jsdelivr.net/gh/MkQtS/MyAdList@main/

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 1
